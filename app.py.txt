from flask import Flask, render_template, request, jsonify
import numpy as np
import pandas as pd
import yfinance as yf
import tensorflow as tf
import joblib

app = Flask(__name__)

# Load trained model and scaler
model = tf.keras.models.load_model("C:\Users\admin\Desktop\Projects\STOCK PRICE\Stock Predictions Model.keras")
scaler = joblib.load("scaler.pkl")

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    data = request.json
    stock_symbol = data.get("stock_symbol")
    
    # Fetch stock data
    df = yf.download(stock_symbol, start="2015-01-01", end="2025-02-28")
    if df.empty:
        return jsonify({"error": "Invalid stock symbol or no data available."})
    
    close_prices = df[['Close']].values
    close_scaled = scaler.transform(close_prices)
    
    # Prepare input for model
    last_60_days = close_scaled[-60:].reshape(1, 60, 1)
    predicted_price = model.predict(last_60_days)[0, 0]
    predicted_price = scaler.inverse_transform([[predicted_price]])[0, 0]
    
    df['Date'] = df.index.strftime('%Y-%m-%d')
    stock_data = df[['Date', 'Close']].to_dict(orient='records')
    
    return jsonify({"predicted_price": predicted_price, "stock_data": stock_data})

if __name__ == "__main__":
    app.run(debug=True)
